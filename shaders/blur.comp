#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 1, rgba8) uniform writeonly image2DMS outputImage;

const int KERNEL_SIZE = 4;
const int KERNEL_LENGTH = (2 * KERNEL_SIZE + 1) * (2 * KERNEL_SIZE + 1);

void main() {

    vec4 pixel = vec4(0.0);
    for(int x = -KERNEL_SIZE; x <= KERNEL_SIZE; x++) {
        for(int y = -KERNEL_SIZE; y <= KERNEL_SIZE; y++) {
            ivec2 coord = ivec2(gl_GlobalInvocationID.xy) + ivec2(x, y);
            pixel += imageLoad(inputImage, coord);
        }
    }

    int samples = 64;
    for(int i = 0; i < samples; i++) {
        imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), i, pixel/float(KERNEL_LENGTH));
    }
}
