variables:
  - &minio-settings
    access_key:
      from_secret: minio_access_key
    secret_key:
      from_secret: minio_secret_key
    endpoint:
      from_secret: minio_endpoint
    path_style: true
    region: eu-central-jcm

when:
  - event: push
  - event: manual

labels:
  compat: riscv64

clone:
  git:
    image: docker.io/woodpeckerci/plugin-git:2.4.0
    settings:
      tags: true
steps:
  build:
    image: ubuntu:plucky
    commands:
      - apt-get update
      - >-
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
        curl clang-20 clang-tools-20 lld-20 llvm-20 cmake ninja-build git glslang-tools xxd patch curl gettext
        ca-certificates libglib2.0-bin imagemagick pkg-config make tar gpg zstd wget fonts-ubuntu zip
      - .woodpecker/download_unlicensed.sh
      - git clone https://github.com/HolyBlackCat/quasi-msys2.git
      - cd quasi-msys2
      - make install _gcc _glibmm-2.68 _SDL2_image _SDL2_mixer _freetype _vulkan-headers _vulkan-loader _ffmpeg _glm
      - cd ..
      - export MSYS2_ROOT=$PWD/quasi-msys2/root
      - BUILD_VERSION=$(git describe --tags --always)
      - mkdir -p build
      - >-
        cmake
        -DCMAKE_C_COMPILER=clang-20 -DCMAKE_CXX_COMPILER=clang++-20 -DCMAKE_LINKER_TYPE=LLD
        -DCMAKE_TOOLCHAIN_FILE=cmake/windows.cmake
        -DCMAKE_BUILD_TYPE=RelWithDebInfo
        -DSEPARATE_DEBUG_INFO=ON
        -DBUILD_VERSION=$BUILD_VERSION
        -B build -G Ninja -S . 2>&1 | tee build/cmake-configure-windows.log
      - cmake --build build --parallel 2 2>&1 | tee build/cmake-build-windows.log
      - cd build
      # Install
      - DESTDIR=xmbshell-windows cmake --install . --prefix /
      # Compile schemas and copy fonts
      - glib-compile-schemas xmbshell-windows/glib-2.0/schemas/
      - cp /usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf xmbshell-windows/xmbshell/Ubuntu-R.ttf
      # Copy dependencies
      - wget https://files.jcm.re/copydeps-$(arch) -O copydeps
      - chmod +x copydeps
      - ./copydeps --search-dir $MSYS2_ROOT/ucrt64/bin --verbose xmbshell-windows/xmbshell.exe xmbshell-windows/ || true
      # Zip and prepare for upload
      - mkdir -p upload/build upload/beta
      - zip -r upload/build/xmbshell-$BUILD_VERSION-windows.zip xmbshell-windows/
      - cp upload/build/xmbshell-$BUILD_VERSION-windows.zip upload/beta/xmbshell-beta-windows.zip
      - cp xmbshell.exe.dbg upload/build/xmbshell-$BUILD_VERSION-windows.exe.dbg
      - cp xmbshell.exe.dbg upload/beta/xmbshell-beta-windows.exe.dbg
  upload-logs:
    image: git.jcm.re/jcm/woodpecker-plugin-s3:latest
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/cmake-*-windows.log
      strip_prefix: build/
      target: /artifacts/${CI_REPO}/${CI_PIPELINE_NUMBER}/public/
      retry_count: 60
      retry_delay: 10s
    when:
      - status: [ success, failure ]
  upload-build:
    image: git.jcm.re/jcm/woodpecker-plugin-s3:latest
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/upload/build/*
      strip_prefix: build/upload/build/
      target: /artifacts/${CI_REPO}/${CI_PIPELINE_NUMBER}/public/
      retry_count: 60
      retry_delay: 10s
  upload-beta:
    image: git.jcm.re/jcm/woodpecker-plugin-s3:latest
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/upload/beta/*
      strip_prefix: build/upload/beta/
      target: /artifacts/${CI_REPO}/${CI_COMMIT_BRANCH}/public/
      overwrite: true
      retry_count: 60
      retry_delay: 10s
